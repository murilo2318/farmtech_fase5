# FarmTech Dashboard

Dashboard interativo para monitoramento agr√≠cola, integrando sensores f√≠sicos e previs√µes de produtividade.  
O projeto utiliza **Flask**, **MySQL**, **Tailwind CSS** e **Chart.js** para visualiza√ß√£o de dados.

---

## üóÇ Estrutura do Projeto
farmtech-dashboard/
‚îÇ
‚îú‚îÄ app.py                 # C√≥digo principal em Flask (rotas e API)
‚îú‚îÄ config.py              # Configura√ß√µes do banco de dados
‚îú‚îÄ requirements.txt       # Depend√™ncias do projeto
‚îú‚îÄ templates/
‚îÇ   ‚îî‚îÄ index.html         # HTML do dashboard
‚îî‚îÄ README.md              # Documenta√ß√£o do projeto
---

## ‚öôÔ∏è Funcionalidades

- Dashboard com **cards de estat√≠sticas**: fazendas, talh√µes, culturas e sensores.
- **Gr√°ficos interativos**:
  - Temperatura (√∫ltimos 7 dias)
  - Umidade (√∫ltimos 7 dias)
  - Previs√£o de produtividade por cultura (Soja e Milho)
- **Status dos sensores** com cores para f√°cil identifica√ß√£o:
  - Verde: ativo
  - Amarelo: manuten√ß√£o
  - Vermelho: inativo
- Simula√ß√£o de dados em tempo real (atualiza√ß√£o a cada 5 segundos).
- Responsivo e estilizado com Tailwind CSS.

---

## üõ† Tecnologias Utilizadas

- **Backend**: Python, Flask
- **Banco de dados**: MySQL
- **Frontend**: HTML, Tailwind CSS, Chart.js
- **Outros**: Font Awesome para √≠cones

---

## üóÉ Banco de Dados

### Tabelas principais:

#### `sensores`
| Coluna       | Tipo        | Descri√ß√£o                       |
|-------------|------------|---------------------------------|
| id          | INT        | Identificador do sensor          |
| nome        | VARCHAR    | Nome do sensor                   |
| tipo        | VARCHAR    | Tipo (DHT22, Soil Moisture, etc)|
| talhao      | VARCHAR    | Talh√£o em que est√° instalado     |
| status      | ENUM       | `ATIVO`, `INATIVO`, `MANUTEN√á√ÉO`|
| data_instalacao | DATE    | Data de instala√ß√£o               |

#### `leituras`
| Coluna       | Tipo        | Descri√ß√£o                       |
|-------------|------------|---------------------------------|
| id          | INT        | Identificador da leitura         |
| sensor_id   | INT        | Relacionamento com `sensores.id`|
| temperatura | FLOAT      | Temperatura registrada           |
| umidade     | FLOAT      | Umidade registrada               |
| data_hora   | DATETIME   | Data e hora da leitura           |

> ‚ö†Ô∏è Certifique-se de atualizar `config.py` com suas credenciais do MySQL.

---

## üöÄ Como Rodar

1. **Clonar o reposit√≥rio:**

```bash
git clone https://github.com/SEU_USUARIO/farmtech-dashboard.git
cd farmtech-dashboard
CREATE DATABASE farmtech;
USE farmtech;

CREATE TABLE sensores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(50),
    tipo VARCHAR(50),
    talhao VARCHAR(50),
    status ENUM('ATIVO','INATIVO','MANUTEN√á√ÉO'),
    data_instalacao DATE
);

CREATE TABLE leituras (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sensor_id INT,
    temperatura FLOAT,
    umidade FLOAT,
    data_hora DATETIME,
    FOREIGN KEY (sensor_id) REFERENCES sensores(id)
);
Criar banco de dados e tabelas no MySQL

uturas Melhorias
	‚Ä¢	Integra√ß√£o com sensores f√≠sicos reais via ESP32.
	‚Ä¢	Dashboard interativo com filtros por talh√£o e cultura.
	‚Ä¢	Exporta√ß√£o de dados para CSV e relat√≥rios autom√°ticos.
	‚Ä¢	Alertas autom√°ticos para sensores inativos ou em manuten√ß√£o.

‚∏ª

ü§ù Contribui√ß√£o

Contribui√ß√µes s√£o bem-vindas! Abra um pull request ou issue para sugerir melhorias.

Link V√≠deo: https://youtu.be/RhttrkyQzT4
